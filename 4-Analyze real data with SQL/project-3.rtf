— SELECT *
 FROM subscriptions
 LIMIT 100;											genel bir bakış, hangi sutunlar var

— SELECT MIN(subscription_start), MAX(subscription_start)				tarihlerin range ne? Hangi doneme iliskin raporlama yapacağız?
  FROM subscriptions;

—  WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,						once ilk tabloyu yapıyoruz
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day)
SELECT *
FROM months;

— WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
cross_join AS 
(SELECT *
FROM subscriptions						sonra ilk tablo ile ana tabloyu cross join yaparak ikinci tabloyu oluşturuyoruz.
CROSS JOIN months
)
SELECT *
FROM cross_join;

— WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
cross_join AS 
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT 
id, 
first_day AS month,
CASE
  WHEN (subscription_start<first_day) AND
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 87) THEN 1								cross_join den 4 sutun seçerek status diye gecici bir tablo oluşturduk, 
  ELSE 0
END as is_active_87,
CASE
  WHEN (subscription_start<first_day) AND 
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 30) THEN 1
  ELSE 0
END as is_active_30
FROM cross_join)
SELECT *
FROM status
LIMIT 10;

—  WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
cross_join AS 
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT 
id, 
first_day AS month,
CASE
  WHEN (subscription_start<first_day) AND
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 87) THEN 1
  ELSE 0
END as is_active_87,
CASE
  WHEN (subscription_start<first_day) AND 
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 30) THEN 1
  ELSE 0
END as is_active_30,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 87) THEN 1					status tablosuna 2 sutun daha ekledik
  ELSE 0
END as is_canceled_87,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 30) THEN 1
  ELSE 0
END as is_canceled_30
FROM cross_join)
SELECT *
FROM status
LIMIT 10;

— WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
cross_join AS 
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT 
id, 
first_day AS month,
CASE
  WHEN (subscription_start<first_day) AND
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 87) THEN 1
  ELSE 0
END as is_active_87,
CASE
  WHEN (subscription_start<first_day) AND 
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 30) THEN 1
  ELSE 0
END as is_active_30,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 87) THEN 1
  ELSE 0
END as is_canceled_87,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 30) THEN 1
  ELSE 0
END as is_canceled_30
FROM cross_join),
status_aggregate AS
(SELECT month, SUM(is_active_87) as sum_active_87,
SUM(is_active_30) as sum_active_30,											yeni bir tablo oluşturduk ve aylara gore aktif ve iptal eden sayı toplamlarını bulduk
SUM(is_canceled_87) as sum_canceled_87,
SUM(is_canceled_30) as sum_canceled_30
FROM status)
SELECT *
FROM status_aggregate
GROUP BY month;

— WITH months AS 
 (SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
cross_join AS 
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT 
id, 
first_day AS month,
CASE
  WHEN (subscription_start<first_day) AND
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 87) THEN 1
  ELSE 0
END as is_active_87,
CASE
  WHEN (subscription_start<first_day) AND 
        (subscription_end > first_day
        OR subscription_end IS NULL) AND 
  (segment = 30) THEN 1
  ELSE 0
END as is_active_30,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 87) THEN 1
  ELSE 0
END as is_canceled_87,
CASE 
  WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 30) THEN 1
  ELSE 0
END as is_canceled_30
FROM cross_join),
status_aggregate AS
(SELECT month, SUM(is_active_87) as sum_active_87,
SUM(is_active_30) as sum_active_30,
SUM(is_canceled_87) as sum_canceled_87,
SUM(is_canceled_30) as sum_canceled_30
FROM status
GROUP BY month)
SELECT month, 1.0*sum_canceled_87/sum_active_87,							olusturdugumuz yeni tablo uzerinden churn rate hesapladık
1.0*sum_canceled_30/sum_active_30
FROM status_aggregate;




—
