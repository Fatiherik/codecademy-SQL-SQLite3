—SELECT *
FROM orders
LIMIT 5;

SELECT *
FROM subscriptions
LIMIT 5;

SELECT * 
FROM customers
LIMIT 5;

— SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id;

—SELECT *
FROM orders
JOIN subscriptions
  ON orders.subscription_id = subscriptions.subscription_id
WHERE description='Fashion Magazine';

—SELECT COUNT(*)
FROM newspaper;

SELECT COUNT(*)
FROM online;

SELECT COUNT(*)
FROM newspaper							JOIN ya da INNER JOIN: online tablosunu newspaper tablosunun sağına ekliyor ancak newspaper.id=online.id sütunlarından sadece kesisen satırları aliyor.
JOIN online
  ON newspaper.id=online.id;

— SELECT *
FROM newspaper						JOIN ya da INNER JOIN: online tablosunu newspaper tablosunun sağına ekliyor newspaper.id sutunu aynen kalıyor online.id sütunundan sadece kesisen satırları aliyor.
LEFT JOIN online
  ON newspaper.id=online.id;


—SELECT *
FROM newspaper
LEFT JOIN online					newspaper alip online almayan kisileri buluyor
  ON newspaper.id=online.id
WHERE online.id IS NULL;


—
These special columns are called primary keys.
Primary keys have a few requirements:
		None of the values can be NULL.
		Each value must be unique (i.e., you can’t have two customers with the same customer_id in the customers table).
		A table can not have more than one primary key column.
When the primary key for one table appears in a different table, it is called a foreign key.
So customer_id is a primary key when it appears in customers, but a foreign key when it appears in orders.

—SELECT *
FROM newspaper							tum combinasyonlari yazıyor yani newspaperda 60 satir var, months da 12 ay var, newspaperdaki herbir satiri 12 defa yazıyor 
CROSS JOIN months;
—SELECT COUNT(*)
FROM newspaper
WHERE start_month <= 3
  AND end_month >= 3;

SELECT *
FROM newspaper
CROSS JOIN months;

SELECT *
FROM newspaper
CROSS JOIN months
WHERE start_month <= month
  AND end_month >= month;

SELECT month, COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month
  AND end_month >= month
GROUP BY 1;

—SELECT *
FROM newspaper							newspaper tablosunu online tablosunun uzerine koydu
UNION 
SELECT *
FROM online;

—WITH previous_query AS(
  SELECT customer_id,
  COUNT(subscription_id) AS 'subscriptions'
  FROM orders										WITH gecici table yapmani ve onu kullanmanı sağlıyor
  GROUP BY customer_id
)
SELECT customers.customer_name,
previous_query.subscriptions

FROM previous_query
JOIN customer
  ON previous_query.customer_id=customer.customer_id;



—


—
